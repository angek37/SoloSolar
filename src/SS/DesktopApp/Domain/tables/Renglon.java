/*
 * This file is generated by jOOQ.
 */
package SS.DesktopApp.Domain.tables;


import SS.DesktopApp.Domain.Admin;
import SS.DesktopApp.Domain.Keys;
import SS.DesktopApp.Domain.Entities.RenglonRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Renglon extends TableImpl<RenglonRecord> {

    private static final long serialVersionUID = 1025591211;

    /**
     * The reference instance of <code>ADMIN.RENGLON</code>
     */
    public static final Renglon RENGLON = new Renglon();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RenglonRecord> getRecordType() {
        return RenglonRecord.class;
    }

    /**
     * The column <code>ADMIN.RENGLON.PEDIDO</code>.
     */
    public final TableField<RenglonRecord, Integer> PEDIDO = createField("PEDIDO", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ADMIN.RENGLON.ID_PROD</code>.
     */
    public final TableField<RenglonRecord, String> ID_PROD = createField("ID_PROD", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>ADMIN.RENGLON.PRECIO</code>.
     */
    public final TableField<RenglonRecord, Double> PRECIO = createField("PRECIO", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>ADMIN.RENGLON.CANTIDAD</code>.
     */
    public final TableField<RenglonRecord, Integer> CANTIDAD = createField("CANTIDAD", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ADMIN.RENGLON.LISTA</code>.
     */
    public final TableField<RenglonRecord, Integer> LISTA = createField("LISTA", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ADMIN.RENGLON.SUBTOTAL</code>.
     */
    public final TableField<RenglonRecord, Double> SUBTOTAL = createField("SUBTOTAL", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>ADMIN.RENGLON</code> table reference
     */
    public Renglon() {
        this(DSL.name("RENGLON"), null);
    }

    /**
     * Create an aliased <code>ADMIN.RENGLON</code> table reference
     */
    public Renglon(String alias) {
        this(DSL.name(alias), RENGLON);
    }

    /**
     * Create an aliased <code>ADMIN.RENGLON</code> table reference
     */
    public Renglon(Name alias) {
        this(alias, RENGLON);
    }

    private Renglon(Name alias, Table<RenglonRecord> aliased) {
        this(alias, aliased, null);
    }

    private Renglon(Name alias, Table<RenglonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Renglon(Table<O> child, ForeignKey<O, RenglonRecord> key) {
        super(child, key, RENGLON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Admin.ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RenglonRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RenglonRecord, ?>>asList(Keys.FK_RP, Keys.FK_RPROD);
    }

    public Pedido pedido() {
        return new Pedido(this, Keys.FK_RP);
    }

    public Producto producto() {
        return new Producto(this, Keys.FK_RPROD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Renglon as(String alias) {
        return new Renglon(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Renglon as(Name alias) {
        return new Renglon(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Renglon rename(String name) {
        return new Renglon(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Renglon rename(Name name) {
        return new Renglon(name, null);
    }
}
