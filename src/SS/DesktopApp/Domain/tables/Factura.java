/*
 * This file is generated by jOOQ.
 */
package SS.DesktopApp.Domain.tables;


import SS.DesktopApp.Domain.Admin;
import SS.DesktopApp.Domain.Keys;
import SS.DesktopApp.Domain.Entities.FacturaRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Factura extends TableImpl<FacturaRecord> {

    private static final long serialVersionUID = -1429600911;

    /**
     * The reference instance of <code>ADMIN.FACTURA</code>
     */
    public static final Factura FACTURA = new Factura();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FacturaRecord> getRecordType() {
        return FacturaRecord.class;
    }

    /**
     * The column <code>ADMIN.FACTURA.ID_FACTURA</code>.
     */
    public final TableField<FacturaRecord, Integer> ID_FACTURA = createField("ID_FACTURA", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>ADMIN.FACTURA.CLIENTE</code>.
     */
    public final TableField<FacturaRecord, Integer> CLIENTE = createField("CLIENTE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ADMIN.FACTURA.FECHA</code>.
     */
    public final TableField<FacturaRecord, Date> FECHA = createField("FECHA", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>ADMIN.FACTURA.IVA</code>.
     */
    public final TableField<FacturaRecord, Boolean> IVA = createField("IVA", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>ADMIN.FACTURA.OBSERVACIONES</code>.
     */
    public final TableField<FacturaRecord, String> OBSERVACIONES = createField("OBSERVACIONES", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>ADMIN.FACTURA.TOTAL</code>.
     */
    public final TableField<FacturaRecord, Double> TOTAL = createField("TOTAL", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>ADMIN.FACTURA</code> table reference
     */
    public Factura() {
        this(DSL.name("FACTURA"), null);
    }

    /**
     * Create an aliased <code>ADMIN.FACTURA</code> table reference
     */
    public Factura(String alias) {
        this(DSL.name(alias), FACTURA);
    }

    /**
     * Create an aliased <code>ADMIN.FACTURA</code> table reference
     */
    public Factura(Name alias) {
        this(alias, FACTURA);
    }

    private Factura(Name alias, Table<FacturaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Factura(Name alias, Table<FacturaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Factura(Table<O> child, ForeignKey<O, FacturaRecord> key) {
        super(child, key, FACTURA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Admin.ADMIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FacturaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FACTURA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FacturaRecord> getPrimaryKey() {
        return Keys.SQL180711232156640;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FacturaRecord>> getKeys() {
        return Arrays.<UniqueKey<FacturaRecord>>asList(Keys.SQL180711232156640);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<FacturaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<FacturaRecord, ?>>asList(Keys.FK_FC);
    }

    public Cliente cliente() {
        return new Cliente(this, Keys.FK_FC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Factura as(String alias) {
        return new Factura(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Factura as(Name alias) {
        return new Factura(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Factura rename(String name) {
        return new Factura(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Factura rename(Name name) {
        return new Factura(name, null);
    }
}
